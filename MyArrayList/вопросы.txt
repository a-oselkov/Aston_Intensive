1. Различие между ArrayList и LinkedList. Преимущества/недостатки.

2. Разница между HashMap и TreeMap
	Основа - хеш - таблица/дерево. 
	Порядок элементов -  не сортированные, не хранит порядок/сортированные, хранит порядок.
	Возможность добавления null. Можно/ TreeMap может использовать значения null только если это позволяет компаратор. Без использования компаратора 		 (при хранении пар в порядке добавления) значение null не допускается.

3. Как получить все ключи/значения из Map
		
	keySet() — возвращает множество(Set) ключей;
	values() — возвращает коллекцию(Collection) значений;
	entrySet() — возвращает множество(Set) наборов “ключ-значение”.	
		// key list
		List<Integer> keyList = new ArrayList<>(map.keySet());
		// value list
		List<String> valueList = new ArrayList<>(map.values());
		// key-value list
		List<Map.Entry<Integer, String>> entryList = new ArrayList<>(map.entrySet());
			
4. Как происходит удаление и добавление элементов в ArrayList и как при этом меняется его размер.
	При удалении произвольного элемента из списка, все элементы находящиеся «правее» смещаются на одну ячейку 
	влево и реальный размер массива (его емкость, capacity) не изменяется никак.
	При добавлении размер может быть увеличен.

5. При каких входных данным быстрая сортировка менее эффективна. Лучшая(OnLogn) - худшая сложности(On2)

6. Процесс добавления новых элементов в HashMap.

7. GIT reset
	git reset [--soft|--mixed|--hard][commit(HEAD or Hash)]
	
	hard - теряем текущее состояние файлов и приобретаем состояние того коммита, куда был сделан reset.
	mixed - Возвращает проект к указанному коммиту, передвигает ветку, сбрасывает индекс, но не трогает рабочую дерикторию. 
		(можно добавить теже изменения или перекомитить). Часто используется с HEAD, что бы очистить индекс.
	soft - Возвращает проект к указанному коммиту, сохраняя все состояние проекта и проиндексированные файлы.
		Отменяет коммит, но оставляет все подготовленные к нему данные. Часто используется для переделки предыдущего коммита.

8. GIT - ошибка - файл в локальном и удаленном репозиторие изменились
	Изменили файл в ремозитории и локально.
	git .add
	git commit - m "..."
	git push origin main
	Получаем ошибку
	git pull - ошибка слияния
		   git fetch +
		   git merge - 
	git merge - ошибка слияния - редактируем файл
	git add . 
	git commit (коммит слияния)
	git push
	
 
9.  Linux ПАЙПЛАЙН |
	Дает возможность соединять потоки. Благодаря пайплайну можно соединять программы и протаскивать данные сквозь них
	cat source | grep Dog | uniq | sort
	
	Читается файл source
	Грепаются входные данные по подстроке Dog
	Убираются дубли (в исходном файле две одинаковых строки Dog)
	Сортируются входные данные и выводятся на экран	
	 
10. Linux перемещение между дирректориями, просмотр
	cat  - чтение файла
	cd .. перейти в директорию выше
	cd .. / .. перейти выше на любое кол-во уровней
	cd переход в дом. директорию
	./ текущая директория
	~/ абсолютный путь до дом.директории
	ls directory_name список файлов в директории
	ls -a скрытые файлы - папки
	ls -l список файлов + доп.инфо
